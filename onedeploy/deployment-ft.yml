---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: example-deploy
  labels:
    app: example-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: example-app
    spec:
      imagePullSecrets:
      - name: dockerhub-secret # Ensure this secret exists in the namespace
      containers:
      - name: example-app
        image: mohamedamineblibech/frontend:v1.363
        ports:
        - containerPort: 3000
          # - env:
          #   name: PORT
          #   value: "3000"
          #   name: DJANGO_SERVICE_ADDR
          #   # accesible using the service called and the port of service
          #   value: "we-tekup:80"

        envFrom:
        - configMapRef:
            name: reactjs-config # Reference the correct ConfigMap name

        # Uncomment the following if needed
        # resources:
        #   requests:
        #     memory: "500Mi"
        #     cpu: "500m"
        #   limits:
        #     memory: "800Mi"
        #     cpu: "500m"
        # Uncomment volumeMounts if you are using secrets or ConfigMaps
        # volumeMounts:
        # - name: secret-volume
        #   mountPath: /secrets/
        # - name: config-volume
        #   mountPath: /configs/
      # Uncomment volumes if you are using secrets or ConfigMaps
      # volumes:
      # - name: secret-volume
      #   secret:
      #     secretName: mysecret
      # - name: config-volume
      #   configMap:
      #     name: example-config

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: example-service
  labels:
    app: example-app
spec:
  type: LoadBalancer
  selector:
    app: example-app
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 3000
